// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
      &:active,
      &:focus {
      @content;
    }
  } @else {
    &:hover,
      &:active,
      &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Sass Paddinghack
/// $containerwidth: width of the responsive container
/// $imgwidth and $imgheight stand for aspect ratio you want to  achieve (example: 16:9)
@mixin paddinghack($containerwidth, $ratiowidth, $ratioheight){ 
  position: relative;
  width: $containerwidth;
  height: 0;
  padding-bottom: (($ratioheight / $ratiowidth) * $containerwidth);
}

/// A mixin for writing @font-face rules in SASS.
/// usage: @include font-face('Proxima Nova Light', '../fonts/proximanova-light-webfont');
@mixin font-face($name, $url) {
  @font-face {
    font-family:'#{$name}';
    src: url('#{$url}.eot');
    src: url('#{$url}.eot#iefix') format("embedded-opentype"),
      url('#{$url}.woff2') format('woff2'),
      url('#{$url}.woff') format('woff'),
      url('#{$url}.ttf') format('truetype'),
      url('#{$url}.svg##{$name}') format('svg');
    font-weight: normal;
    font-style: normal;
    @content;
  }
}

/// A mixin for writing @font-face rules in SASS.
/// usage: @include font-face('Proxima Nova Light', '../fonts/proximanova-light-webfont');
@mixin pad-vert-align($box-height: 50, $el-height: 16) {
  $h: ($box-height - $el-height) / 2;
  padding-top: rem-calc($h);
  padding-bottom: rem-calc($h);
}


/*
* placeholder
*/
@mixin input-placeholder {
  color: inherit;
  font-weight: inherit;
  font-size: inherit;
  font-style: inherit;
  opacity: 1;
}

// Converting Photoshop Letter Spacing to CSS
@function getLetterSpacing($num) {
  @return ($num / 1000) + em;
}

@mixin letter-spacing($num:100){
  letter-spacing: getLetterSpacing($num);
}